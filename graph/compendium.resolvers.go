package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"

	"github.com/e-mbrown/rollWOD/graph/model"
)

// Characteristics is the resolver for the characteristics field.
func (r *queryResolver) Characteristics(ctx context.Context, name *string) ([]*model.Characteristic, error) {
	if name != nil {
		for _,v := range r.characteristics{
			if name == &v.Name {
				return v
			}
		}
	}
	return r.characteristics, nil
}

// Titles is the resolver for the titles field.
func (r *queryResolver) Titles(ctx context.Context, name *string) ([]*model.Title, error) {
	return r.titles, nil
}

// Sects is the resolver for the sects field.
func (r *queryResolver) Sects(ctx context.Context, id *string) ([]*model.Sect, error) {
	return r.sects, nil
}

// Traditions is the resolver for the traditions field.
func (r *queryResolver) Traditions(ctx context.Context, id *string) ([]*model.Tradition, error) {
	return r.traditions, nil
}

// GenInfo is the resolver for the genInfo field.
func (r *queryResolver) GenInfo(ctx context.Context, name *string) ([]*model.GeneralInfo, error) {
	return r.genInfo, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
